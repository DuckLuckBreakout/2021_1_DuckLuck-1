version: '3'

services:
  api-db:
    image: duckluckmarket/postgres:${TAG}
    restart: unless-stopped
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./scripts/postgresql/init_api_db.sql:/docker-entrypoint-initdb.d/init_auth_db.sql
    networks:
      - app-network
  auth-db:
    image: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./scripts/postgresql/init_auth_db.sql:/docker-entrypoint-initdb.d/init_auth_db.sql
    networks:
      - app-network
  session-db:
    image: redis
    restart: unless-stopped
    networks:
      - app-network
  cart-db:
    image: redis
    restart: unless-stopped
    networks:
      - app-network
  api-server:
    depends_on:
      - api-db
    image: duckluckmarket/godeploy/api-server:${TAG}
    container_name: api_server
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./log:/log
      - ./configs/envs/api_server:/configs/envs/api_server
      - ./configs/envs/network.env:/configs/envs/network.env
    networks:
      - app-network
  session-service:
    depends_on:
      - api-db
    image: duckluckmarket/godeploy/session-service:${TAG}
    container_name: session_service
    restart: unless-stopped
    volumes:
      - ./log:/log
      - ./configs/envs/session_service:/configs/envs/session_service
      - ./configs/envs/network.env:/configs/envs/network.env
    networks:
      - app-network
  auth-service:
    depends_on:
      - api-db
    image: duckluckmarket/godeploy/auth-service:${TAG}
    container_name: auth_service
    restart: unless-stopped
    volumes:
      - ./log:/log
      - ./configs/envs/auth_service:/configs/envs/auth_service
      - ./configs/envs/network.env:/configs/envs/network.env
    networks:
      - app-network
networks:
  app-network:
    driver: bridge
