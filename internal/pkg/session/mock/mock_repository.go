// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/go-park-mail-ru/2021_1_DuckLuck/internal/pkg/session (interfaces: Repository)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	models "github.com/go-park-mail-ru/2021_1_DuckLuck/internal/pkg/models"
	gomock "github.com/golang/mock/gomock"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// AddSession mocks base method.
func (m *MockRepository) AddSession(arg0 *models.Session) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddSession", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddSession indicates an expected call of AddSession.
func (mr *MockRepositoryMockRecorder) AddSession(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddSession", reflect.TypeOf((*MockRepository)(nil).AddSession), arg0)
}

// DeleteByValue mocks base method.
func (m *MockRepository) DeleteByValue(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteByValue", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteByValue indicates an expected call of DeleteByValue.
func (mr *MockRepositoryMockRecorder) DeleteByValue(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteByValue", reflect.TypeOf((*MockRepository)(nil).DeleteByValue), arg0)
}

// SelectSessionByValue mocks base method.
func (m *MockRepository) SelectSessionByValue(arg0 string) (*models.Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectSessionByValue", arg0)
	ret0, _ := ret[0].(*models.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectSessionByValue indicates an expected call of SelectSessionByValue.
func (mr *MockRepositoryMockRecorder) SelectSessionByValue(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectSessionByValue", reflect.TypeOf((*MockRepository)(nil).SelectSessionByValue), arg0)
}
